//============================================
// Grid system
//============================================


// Config example
//============================================

// $config: (
//   "name": "xs",
//   "cols": 24,
//   "gutter": 15px,
//   "bp": false,
//   "off": false,
//   "pull": false,
//   "push": false,
// );


// Main mixin
//============================================

=grid($configs...)
  // Default Classes
  .g-row
    +cf()

  .g
    float: left
    width: 100%
    min-height: 1px
    position: relative

  @each $config in $configs

    // Get config
    $name:    map-get($config, "name")
    $cols:    map-get($config, "cols")
    $gutter-lft:  map-get($config, "gutter") / 2
    $gutter-rgt:  map-get($config, "gutter") / 2

    @if str-length($name) != 0
      $name: "#{\@}#{$name}"

    // Base unit
    @if $cols
      $base: (100%/$cols)

    +mq(map-get($config, "bp"))

      // Update row
      .g-row
        margin-left: -$gutter-lft
        margin-right: -$gutter-rgt

      // Clear
      @if map-get($config, "clear")
        @each $col in map-get($config, "clear")
          .g-clear-#{$col}#{$name}
            .g:nth-child(#{$col}n+1)
              clear: left
            .g:not(:nth-child(#{$col}n+1))
              clear: none

      // Update unit
      .g
        padding-left: $gutter-lft
        padding-right: $gutter-rgt

      // Units
      @if $cols
        @for $i from 1 through $cols
          .g-#{$i}#{$name}
            $base: (100%/$cols)
            width: $base * $i


      // Helpers
      +grid-helper($config, "off", margin-left, 0)
      +grid-helper($config, "pull", right, auto)
      +grid-helper($config, "push", left, auto)


// Helper mixin
//============================================

=grid-helper ($config, $type, $prop, $val0)
  $name: map-get($config, "name")
  $cols: map-get($config, "cols")
  $base: (100%/$cols)

  @if str-length($name) != 0
    $name: "#{\@}#{$name}"

  @if $cols
    @if map-get($config, $type)
      .g-#{$type}-0#{$name}
        #{$prop}: $val0

      @for $i from 1 to $cols
        .g-#{$type}-#{$i}#{$name}
          #{$prop}: $base * $i